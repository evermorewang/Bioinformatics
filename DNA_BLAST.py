from Bio.Seq import Seq
from Bio.Align import PairwiseAligner

# Placeholder for your DNA sequences (replace with your actual sequences)
Seq1 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAGAAGAGCTCCAACCGGTGTGGTAGCTCCGCCGTTTAACATCGCCCTTCCCAACAGTTGCGCAGCCTGAATGGCGAATGGAGATCCAATTTTTAAGTGTATAATGTGTTAAACTACTGATTCTAATTGTTTGTGTATTTTAGATTCACAGTCCCAAGGCTCATTTCAGGCCCCTCAGTCCTCACAGTCTGTTCATGATCATAATCAGCCATACCACATTTGTAGAGGTTTTACTTGCTTTAAAAAACCTCCCACACCTCCCCCTGAACCTGAAACATAAAATGAATGCAATTGTTGTTGTTAACTTGTTTATTGCAGCTTATAATGGTTACAAATAAAGCAATAGCATCACAAATTTCACAAATAAAGCATTTTTTTCACTGCATTCTAGTTGTGGTTTGTCCAAACTCATCAATGTATCTTAACGCGTAAATTGTAAGCGTTAATATTTTGTTAAAATTCGCGTTAAATTTTTGTTAAATCAGCTCATTTTTTAACCAATAGGCCGAAATCGGCAAAATCCCTTATAAATCAAAAGAATAGACCGAGATAGGGTTGAGTGTTGTTCCAGTTTGGAACAAGAGTCCACTATTAAAGAACGTGGACTCCAACGTCAAAGGGCGAAAAACCGTCTATCAGGGCGATGGCCCACTACGTGAACCATCACCCTAATCAAGTTTTTTGGGGTCGAGGTGCCGTAAAGCACTAAATCGGAACCCTAAAGGGAGCCCCCGATTTAGAGCTTGACGGGGAAAGCCGGCGAACGTGGCGAGAAAGGAAGGGAAGAAAGCGAAAGGAGCGGGCGCTAGGGCGCTGGCAAGTGTAGCGGTCACGCTGCGCGTAACCACCACACCCGCCGCGCTTAATGCGCCGCTACAGGGCGCGTCAGGTGGCACTTTTCGGGGAAATGTGCGCGGAACCCCTATTTGTTTATTTTTCTAAATACATTCAAATATGTATCCGCTCATGAGACAATAACCCTGATAAATGCTTCAATAATATTGAAAAAGGAAGAATCCTGAGGCGGAAAGAACCAGCTGTGGAATGTGTGTCAGTTAGGGTGTGGAAAGTCCCCAGGCTCCCCAGCAGGCAGAAGTATGCAAAGCATGCATCTCAATTAGTCAGCAACCAGGTGTGGAAAGTCCCCAGGCTCCCCAGCAGGCAGAAGTATGCAAAGCATGCATCTCAATTAGTCAGCAACCATAGTCCCGCCCCTAACTCCGCCCATCCCGCCCCTAACTCCGCCCAGTTCCGCCCATTCTCCGCCCCATGGCTGACTAATTTTTTTTATTTATGCAGAGGCCGAGGCCGCCTCGGCCTCTGAGCTATTCCAGAAGTAGTGAGGAGGCTTTTTTGGAGGCCTAGGCTTTTGCAAAGATCGATCAAGAGACAGGATGAGGATCGTTTCGCATGATTGAACAAGATGGATTGCACGCAGGTTCTCCGGCCGCTTGGGTGGAGAGGCTATTCGGCTATGACTGGGCACAACAGACAATCGGCTGCTCTGATGCCGCCGTGTTCCGGCTGTCAGCGCAGGGGCGCCCGGTTCTTTTTGTCAAGACCGACCTGTCCGGTGCCCTGAATGAACTGCAAGACGAGGCAGCGCGGCTATCGTGGCTGGCCACGACGGGCGTTCCTTGCGCAGCTGTGCTCGACGTTGTCACTGAAGCGGGAAGGGACTGGCTGCTATTGGGCGAAGTGCCGGGGCAGGATCTCCTGTCATCTCACCTTGCTCCTGCCGAGAAAGTATCCATCATGGCTGATGCAATGCGGCGGCTGCATACGCTTGATCCGGCTACCTGCCCATTCGACCACCAAGCGAAACATCGCATCGAGCGAGCACGTACTCGGATGGAAGCCGGTCTTGTCGATCAGGATGATCTGGACGAAGAACATCAGGGGCTCGCGCCAGCCGAACTGTTCGCCAGGCTCAAGGCGAGCATGCCCGACGGCGAGGATCTCGTCGTGACCCATGGCGATGCCTGCTTGCCGAATATCATGGTGGAAAATGGCCGCTTTTCTGGATTCATCGACTGTGGCCGGCTGGGTGTGGCGGACCGCTATCAGGACATAGCGTTGGCTACCCGTGATATTGCTGAAGAACTTGGCGGCGAATGGGCTGACCGCTTCCTCGTGCTTTACGGTATCGCCGCTCCCGATTCGCAGCGCATCGCCTTCTATCGCCTTCTTGACGAGTTCTTCTGAGCGGGACTCTGGGGTTCGAAATGACCGACCAAGCGACGCCCAACCTGCCATCACGAGATTTCGATTCCACCGCCGCCTTCTATGAAAGGTTGGGCTTCGGAATCGTTTTCCGGGACGCCGGCTGGATGATCCTCCAGCGCGGGGATCTCATGCTGGAGTTCTTCGCCCACCCTAGGGGGAGGCTAACTGAAACACGGAAGGAGACAATACCGGAAGGAACCCGCGCTATGACGGCAATAAAAAGACAGAATAAAACGCACGGTGTTGGGTCGTTTGTTCATAAACGCGGGGTTCGGTCCCAGGGCTGGCACTCTGTCGATACCCCACCGAGACCCCATTGGGGCCAATACGCCCGCGTTTCTTCCTTTTCCCCACCCCACCCCCCAAGTTCGGGTGAAGGCCCAGGGCTCGCAGCCAACGTCGGGGCGGCAGGCCCTGCCATAGCCTCAGGTTACTCATATATACTTTAGATTGATTTAAAACTTCATTTTTAATTTAAAAGGATCTAGGTGAAGATCCTTTTTGATAATCTCATGACCAAAATCCCTTAACGTGAGTTTTCGTTCCACTGAGCGTCAGACCCCGTAGAAAAGATCAAAGGATCTTCTTGAGATCCTTTTTTTCTGCGCGTAATCTGCTGCTTGCAAACAAAAAAACCACCGCTACCAGCGGTGGTTTGTTTGCCGGATCAAGAGCTACCAACTCTTTTTCCGAAGGTAACTGGCTTCAGCAGAGCGCAGATACCAAATACTGTTCTTCTAGTGTAGCCGTAGTTAGGCCACCACTTCAAGAACTCTGTAGCACCGCCTACATACCTCGCTCTGCTAATCCTGTTACCAGTGGCTGCTGCCAGTGGCGATAAGTCGTGTCTTACCGGGTTGGACTCAAGACGATAGTTACCGGATAAGGCGCAGCGGTCGGGCTGAACGGGGGGTTCGTGCACACAGCCCAGCTTGGAGCGAACGACCTACACCGAACTGAGATACCTACAGCGTGAGCTATGAGAAAGCGCCACGCTTCCCGAAGGGAGAAAGGCGGACAGGTATCCGGTAAGCGGCAGGGTCGGAACAGGAGAGCGCACGAGGGAGCTTCCAGGGGGAAACGCCTGGTATCTTTATAGTCCTGTCGGGTTTCGCCACCTCTGACTTGAGCGTCGATTTTTGTGATGCTCGTCAGGGGGGCGGAGCCTATGGAAAAACGCCAGCAACGCGGCCTTTTTACGGTTCCTGGCCTTTTGCTGGCCTTTTGCTCACATGTTCTTTCCTGCGTTATCCCCTGATTCTGTGGATAACCGTATTACCGCCATGCATTAGTTATTAATTAATACGAC"  # Example: Replace with your first DNA sequence
Seq2 = "ATGCATTAGTTATTAATAGTAATCAATTACGGGGTCATTAGTTCATAGCCCATATATGGAGTTCCGCGTTACATAACTTACGGTAAATGGCCCGCCTGGCTGACCGCCCAACGACCCCCGCCCATTGACGTCAATAATGACGTATGTTCCCATAGTAACGCCAATAGGGACTTTCCATTGACGTCAATGGGTGGAGTATTTACGGTAAACTGCCCACTTGGCAGTACATCAAGTGTATCATATGCCAAGTACGCCCCCTATTGACGTCAATGACGGTAAATGGCCCGCCTGGCATTATGCCCAGTACATGACCTTATGGGACTTTCCTACTTGGCAGTACATCTACGTATTAGTCATCGCTATTACCATGGTGATGCGGTTTTGGCAGTACATCAATGGGCGTGGATAGCGGTTTGACTCACGGGGATTTCCAAGTCTCCACCCCATTGACGTCAATGGGAGTTTGTTTTGGCACCAAAATCAACGGGACTTTCCAAAATGTCGTAACAACTCCGCCCCATTGACGCAAATGGGCGGTAGGCGTGTACGGTGGGAGGTCTATATAAGCAGAGCTGGTTTAGTGAACCGTCAGATCCGCTAGCGATTACGCCAAGCTCGAAATTAACCCTCACTAAAGGGAACAAAAGCTGGAGCTCCACCGCGGTGGCGGCCGCCCACCATGGCTTCTTTAGATAATTTAGTGGCACGATATCAGAGGTGCTTTAATGACCAGTCTCTTAAAAATAGTACTATTGAACTTGAAATACGTTTTCAACAGATAAATTTTTTATTATTCAAAACCGTATATGAGGCACTTGTGGCACAAGAGATCCCTAGCACCATCTCCCACAGCATCCGCTGCATCAAAAAAGTTCACCATGAAAACCACTGCCGGGAAAAAATTTTGCCGTCGGAAAATCTTTACTTCAAAAAACAGCCTCTCATGTTTTTTAAGTTTTCAGAGCCTGCATCTCTGGGCTGTAAGGTCTCGCTGGCCATCGAGCAGCCCATTCGTAAATTTATCTTGGACTCCTCCGTTCTCGTTCGGCTCAAAAATCGTACGACCTTTCGGGTATCTGAACTTTGGAAAATAGAGCTTACCATTGTAAAGCAGCTGATGGGAAGCGAGGTCTCTGCAAAACTTGCCGCTTTCAAAACGCTTCTGTTTGACACCCCAGAGCAACAAACGACAAAAAATATGATGACGTTAATAAACCCAGATGACGAATATCTTTACGAAATAGAAATAGAGTATACAGGAAAGCCCGAATCCCTAACGGCGGCAGATGTTATAAAAATTAAAAACACGGTGTTGACACTTATTTCTCCGAACCATTTAATGCTAACAGCCTACCACCAGGCCATTGAATTCATTGCCTCCCATATACTGTCCTCAGAAATCCTTCTTGCTCGTATTAAGAGCGGGAAGTGGGGGCTTAAACGCCTCCTCCCCCAGGTGAAATCCATGACCAAAGCGGATTACATGAAATTTTATCCGCCCGTTGGCTACTATGTAACGGACAAAGCAGATGGAATTAGAGGCATCGCCGTCATTCAGGACACGCAAATTTATGTGGTTGCAGACCAGCTATACAGCCTAGGTACCACCGGCATTGAACCCCTTAAACCAACCATTTTGGATGGTGAATTTATGCCTGAAAAAAAAGAATTTTATGGGTTTGACGTCATCATGTATGAGGGCAATCTGTTGACGCAACAGGGGTTTGAAACAAGAATTGAGTCTTTAAGCAAGGGCATTAAAGTCTTACAAGCGTTTAACATAAAAGCAGAAATGAAGCCCTTTATTTCGCTAACAAGTGCAGATCCCAACGTGCTCCTCAAAAACTTTGAAAGCATTTTTAAGAAAAAAACTCGCCCATATTCTATTGATGGCATCATTTTAGTAGAACCTGGCAATTCTTATCTAAATACAAATACTTTTAAGTGGAAGCCCACCTGGGATAACACATTAGACTTTTTGGTGCGAAAATGTCCGGAGAGTTTAAACGTGCCAGAGTACGCGCCCAAAAAAGGGTTTTCCCTGCATCTACTATTTGTAGGCATCTCCGGAGAGCTTTTTAAAAAATTAGCGCTAAATTGGTGTCCAGGATATACGAAACTATTCCCCGTTACACAGCGCAACCAAAACTACTTTCCAGTACAGTTTCAGCCATCGGATTTTCCACTGGCATTTCTTTATTACCACCCAGATACCTCGTCATTTTCTAATATAGATGGAAAGGTCCTTGAAATGCGTTGTCTTAAGAGAGAAATTAATTACGTCAGATGGGAAATTGTAAAAATCCGGGAGGATAGGCAGCAGGATCTTAAAACCGGCGGGTATTTTGGCAATGATTTCAAAACAGCCGAACTCACATGGCTTAACTATATGGATCCCTTTTCCTTTGAGGAACTGGCAAAGGGCCCTTCTGGAATGTACTTCGCCGGTGCCAAAACCGGCATATACCGCGCTCAAACAGCACTTATTTCCTTTATTAAACAAGAAATCATCCAAAAAATAAGTCACCAATCCTGGGTTATCGATCTTGGAATAGGAAAAGGGCAGGACCTAGGACGTTACCTGGACGCAGGGGTAAGGCATCTTGTTGGAATCGATAAGGACCAAACCGCGCTCGCGGAGCTTGTTTATCGAAAATTTTCGCATGCTACAACCCGACAGCACAAGCACGCTACCAACATTTACGTGTTGCATCAAGACCTCGCAGAGCCTGCGAAGGAAATCAGCGAAAAGGTACACCAAATTTACGGGTTTCCCAAGGAGGGAGCTTCTTCCATTGTTAGCAACCTGTTTATTCACTATCTTATGAAAAACACGCAGCAGGTGGAAAACCTGGCCGTTCTGTGCCATAAGCTTCTTCAGCCGGGGGGAATGGTGTGGTTTACCACCATGTTGGGAGAACAGGTCTTAGAATTACTTCATGAAAATAGAATAGAGCTCAATGAAGTATGGGAGGCACGTGAAAACGAGGTGGTCAAATTTGCTATTAAACGTCTCTTTAAAGAGGATATATTACAGGAAACTGGGCAAGAAATTGGAGTCCTGTTACCCTTCAGCAATGGCGACTTCTACAATGAATATCTTGTGAACACAGCGTTTTTAATTAAAATATTTAAACATCACGGCTTTTCCCTAGTTCAAAAGCAGTCCTTTAAGGACTGGATTCCAGAATTTCAAAACTTTAGTAAAAGTTTGTATAAAATTCTTACAGAAGCCGATAAAACTTGGACAAGCCTTTTTGGGTTTATTTGTCTGCGCAAAAATTAACGATCGCCCTTCCCAACAGTTGCGCAGCCTGAATGGCGAATGGAGATCCAATTTTTAAGTGTATAATGTGTTAAACTACTGATTCTAATTGTTTGTGTATTTTAGATTCACAGTCCCAAGGCTCATTTCAGGCCCCTCAGTCCTCACAGTCTGTTCATGATCATAATCAGCCATACCACATTTGTAGAGGTTTTACTTGCTTTAAAAAACCTCCCACACCTCCCCCTGAACCTGAAACATAAAATGAATGCAATTGTTGTTGTTAACTTGTTTATTGCAGCTTATAATGGTTACAAATAAAGCAATAGCATCACAAATTTCACAAATAAAGCATTTTTTTCACTGCATTCTAGTTGTGGTTTGTCCAAACTCATCAATGTATCTTAACGCGTAAATTGTAAGCGTTAATATTTTGTTAAAATTCGCGTTAAATTTTTGTTAAATCAGCTCATTTTTTAACCAATAGGCCGAAATCGGCAAAATCCCTTATAAATCAAAAGAATAGACCGAGATAGGGTTGAGTGTTGTTCCAGTTTGGAACAAGAGTCCACTATTAAAGAACGTGGACTCCAACGTCAAAGGGCGAAAAACCGTCTATCAGGGCGATGGCCCACTACGTGAACCATCACCCTAATCAAGTTTTTTGGGGTCGAGGTGCCGTAAAGCACTAAATCGGAACCCTAAAGGGAGCCCCCGATTTAGAGCTTGACGGGGAAAGCCGGCGAACGTGGCGAGAAAGGAAGGGAAGAAAGCGAAAGGAGCGGGCGCTAGGGCGCTGGCAAGTGTAGCGGTCACGCTGCGCGTAACCACCACACCCGCCGCGCTTAATGCGCCGCTACAGGGCGCGTCAGGTGGCACTTTTCGGGGAAATGTGCGCGGAACCCCTATTTGTTTATTTTTCTAAATACATTCAAATATGTATCCGCTCATGAGACAATAACCCTGATAAATGCTTCAATAATATTGAAAAAGGAAGAATCCTGAGGCGGAAAGAACCAGCTGTGGAATGTGTGTCAGTTAGGGTGTGGAAAGTCCCCAGGCTCCCCAGCAGGCAGAAGTATGCAAAGCATGCATCTCAATTAGTCAGCAACCAGGTGTGGAAAGTCCCCAGGCTCCCCAGCAGGCAGAAGTATGCAAAGCATGCATCTCAATTAGTCAGCAACCATAGTCCCGCCCCTAACTCCGCCCATCCCGCCCCTAACTCCGCCCAGTTCCGCCCATTCTCCGCCCCATGGCTGACTAATTTTTTTTATTTATGCAGAGGCCGAGGCCGCCTCGGCCTCTGAGCTATTCCAGAAGTAGTGAGGAGGCTTTTTTGGAGGCCTAGGCTTTTGCAAAGATCGATCAAGAGACAGGATGAGGATCGTTTCGCATGATTGAACAAGATGGATTGCACGCAGGTTCTCCGGCCGCTTGGGTGGAGAGGCTATTCGGCTATGACTGGGCACAACAGACAATCGGCTGCTCTGATGCCGCCGTGTTCCGGCTGTCAGCGCAGGGGCGCCCGGTTCTTTTTGTCAAGACCGACCTGTCCGGTGCCCTGAATGAACTGCAAGACGAGGCAGCGCGGCTATCGTGGCTGGCCACGACGGGCGTTCCTTGCGCAGCTGTGCTCGACGTTGTCACTGAAGCGGGAAGGGACTGGCTGCTATTGGGCGAAGTGCCGGGGCAGGATCTCCTGTCATCTCACCTTGCTCCTGCCGAGAAAGTATCCATCATGGCTGATGCAATGCGGCGGCTGCATACGCTTGATCCGGCTACCTGCCCATTCGACCACCAAGCGAAACATCGCATCGAGCGAGCACGTACTCGGATGGAAGCCGGTCTTGTCGATCAGGATGATCTGGACGAAGAACATCAGGGGCTCGCGCCAGCCGAACTGTTCGCCAGGCTCAAGGCGAGCATGCCCGACGGCGAGGATCTCGTCGTGACCCATGGCGATGCCTGCTTGCCGAATATCATGGTGGAAAATGGCCGCTTTTCTGGATTCATCGACTGTGGCCGGCTGGGTGTGGCGGACCGCTATCAGGACATAGCGTTGGCTACCCGTGATATTGCTGAAGAACTTGGCGGCGAATGGGCTGACCGCTTCCTCGTGCTTTACGGTATCGCCGCTCCCGATTCGCAGCGCATCGCCTTCTATCGCCTTCTTGACGAGTTCTTCTGAGCGGGACTCTGGGGTTCGAAATGACCGACCAAGCGACGCCCAACCTGCCATCACGAGATTTCGATTCCACCGCCGCCTTCTATGAAAGGTTGGGCTTCGGAATCGTTTTCCGGGACGCCGGCTGGATGATCCTCCAGCGCGGGGATCTCATGCTGGAGTTCTTCGCCCACCCTAGGGGGAGGCTAACTGAAACACGGAAGGAGACAATACCGGAAGGAACCCGCGCTATGACGGCAATAAAAAGACAGAATAAAACGCACGGTGTTGGGTCGTTTGTTCATAAACGCGGGGTTCGGTCCCAGGGCTGGCACTCTGTCGATACCCCACCGAGACCCCATTGGGGCCAATACGCCCGCGTTTCTTCCTTTTCCCCACCCCACCCCCCAAGTTCGGGTGAAGGCCCAGGGCTCGCAGCCAACGTCGGGGCGGCAGGCCCTGCCATAGCCTCAGGTTACTCATATATACTTTAGATTGATTTAAAACTTCATTTTTAATTTAAAAGGATCTAGGTGAAGATCCTTTTTGATAATCTCATGACCAAAATCCCTTAACGTGAGTTTTCGTTCCACTGAGCGTCAGACCCCGTAGAAAAGATCAAAGGATCTTCTTGAGATCCTTTTTTTCTGCGCGTAATCTGCTGCTTGCAAACAAAAAAACCACCGCTACCAGCGGTGGTTTGTTTGCCGGATCAAGAGCTACCAACTCTTTTTCCGAAGGTAACTGGCTTCAGCAGAGCGCAGATACCAAATACTGTCCTTCTAGTGTAGCCGTAGTTAGGCCACCACTTCAAGAACTCTGTAGCACCGCCTACATACCTCGCTCTGCTAATCCTGTTACCAGTGGCTGCTGCCAGTGGCGATAAGTCGTGTCTTACCGGGTTGGACTCAAGACGATAGTTACCGGATAAGGCGCAGCGGTCGGGCTGAACGGGGGGTTCGTGCACACAGCCCAGCTTGGAGCGAACGACCTACACCGAACTGAGATACCTACAGCGTGAGCTATGAGAAAGCGCCACGCTTCCCGAAGGGAGAAAGGCGGACAGGTATCCGGTAAGCGGCAGGGTCGGAACAGGAGAGCGCACGAGGGAGCTTCCAGGGGGAAACGCCTGGTATCTTTATAGTCCTGTCGGGTTTCGCCACCTCTGACTTGAGCGTCGATTTTTGTGATGCTCGTCAGGGGGGCGGAGCCTATGGAAAAACGCCAGCAACGCGGCCTTTTTACGGTTCCTGGCCTTTTGCTGGCCTTTTGCTCACATGTTCTTTCCTGCGTTATCCCCTGATTCTGTGGATAACCGTATTACCGCC"  # Example: Replace with your second DNA sequence

# Convert to RNA
Seq1_rna = Seq(Seq1).replace("T", "U")
Seq2_rna = Seq(Seq2).replace("T", "U")

# Ensure sequences are divisible by 3
Seq1_rna = Seq1_rna[:len(Seq1_rna) - (len(Seq1_rna) % 3)]
Seq2_rna = Seq2_rna[:len(Seq2_rna) - (len(Seq2_rna) % 3)]

# Group into codons
Seq1_codons = [str(Seq1_rna[i:i+3]) for i in range(0, len(Seq1_rna), 3)]
Seq2_codons = [str(Seq2_rna[i:i+3]) for i in range(0, len(Seq2_rna), 3)]

# Translate to protein
Seq1_protein = Seq1_rna.translate(to_stop=True)
Seq2_protein = Seq2_rna.translate(to_stop=True)

# Find stop codon positions and untranslated codons
Seq1_stop_idx = len(Seq1_protein)  # Position of first stop codon
Seq2_stop_idx = len(Seq2_protein)
Seq1_untranslated = len(Seq1_codons) - Seq1_stop_idx
Seq2_untranslated = len(Seq2_codons) - Seq2_stop_idx
Seq1_untrans_pos = f"{Seq1_stop_idx + 1}-{len(Seq1_codons)}" if Seq1_untranslated > 0 else "None"
Seq2_untrans_pos = f"{Seq2_stop_idx + 1}-{len(Seq2_codons)}" if Seq2_untranslated > 0 else "None"

# Trim codon lists to stop codons
Seq1_codons_trimmed = Seq1_codons[:Seq1_stop_idx]
Seq2_codons_trimmed = Seq2_codons[:Seq2_stop_idx]

# Print enhanced length info
print(f"Seq1 codons: {len(Seq1_codons)}, untranslated codons: {Seq1_untranslated} ({Seq1_untrans_pos}), Seq1 AA: {len(Seq1_protein)}")
print(f"Seq2 codons: {len(Seq2_codons)}, untranslated codons: {Seq2_untranslated} ({Seq2_untrans_pos}), Seq2 AA: {len(Seq2_protein)}")
print(f"Seq1 last 5 codons: {Seq1_codons[-5:]}")
print(f"Seq2 last 5 codons: {Seq2_codons[-5:]}")

# Align protein sequences
aligner = PairwiseAligner()
aligner.mode = 'global'
aligner.match_score = 2
aligner.mismatch_score = -1
aligner.open_gap_score = -5
aligner.extend_gap_score = -2

alignments = aligner.align(Seq1_protein, Seq2_protein)
alignment = next(alignments)

# Map codon differences with amino acids
Seq1_aligned = alignment[0]
Seq2_aligned = alignment[1]
Seq1_codon_idx = 0
Seq2_codon_idx = 0
different_codons = []

for i in range(len(Seq1_aligned)):
    aa1 = Seq1_aligned[i]
    aa2 = Seq2_aligned[i]
    if aa1 != '-' and aa2 != '-':
        if Seq1_codon_idx < len(Seq1_codons_trimmed) and Seq2_codon_idx < len(Seq2_codons_trimmed):
            codon1 = Seq1_codons_trimmed[Seq1_codon_idx]
            codon2 = Seq2_codons_trimmed[Seq2_codon_idx]
            if codon1 != codon2:
                different_codons.append((Seq1_codon_idx + 1, aa1, aa2, codon1, codon2))
        Seq1_codon_idx += 1
        Seq2_codon_idx += 1
    elif aa1 != '-':
        Seq1_codon_idx += 1
    elif aa2 != '-':
        Seq2_codon_idx += 1

# Print enhanced comparison with additional columns
print("\nDifferent Codons in Your Sequence (Position, AA_Seq1, AA_Seq2, Seq1 Codon, Seq2 Codon):")
print(f"{'Pos':<6} {'AA_Seq1':<8} {'AA_Seq2':<8} {'Seq1 Codon':<12} {'Seq2 Codon':<12} {'Type':<10}")
print("-" * 60)
for pos, aa1, aa2, codon1, codon2 in different_codons:  # Display all differences
    diff_type = "Optimization" if aa1 == aa2 else "Mutation"
    print(f"{pos:<6} {aa1:<8} {aa2:<8} {codon1:<12} {codon2:<12} {diff_type:<10}")
print(f"Total different codons: {len(different_codons)}")